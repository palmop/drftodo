"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
from base64 import encode
import os
import environ
from pathlib import Path
from urllib.parse import unquote, urlparse

ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'authapp.UserApp'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    'rest_framework',
    'django_filters',
    'authapp',
    'todo'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# print("START ENVIRONMENT")
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = BASE_DIR
env_file = os.path.join(BASE_DIR, ".env")
# print("env_file: {}".format(env_file))
if os.path.exists(env_file):
    environ.Env.read_env(env_file)
    env = environ.Env()
    DEBUG = env('DJANGO_DEBUG') == "True"
    SECRET_KEY = env('SECRET_KEY')
    DATABASES = {
        'default': env.db(),
    }
else:
    # with docker-compose the default env variables are declared
    # in the docke-compose.yml 
    # .env file is in .gitignore and .dockerignore
    SECRET_KEY = os.environ.get('SECRET_KEY', '')
    DEBUG = os.environ.get('DEBUG', True)
    DATABASE_URL = os.environ.get('DATABASE_URL', '')
    db_url = urlparse(DATABASE_URL)
    DB_NAME = db_url.path[1:]  # remove trailing slash
    # username and password can't contain reserved character, so they should
    # be percent encoded
    DB_USER = unquote(db_url.username)
    DB_PASSWORD = unquote(db_url.password)
    DB_HOST = db_url.hostname
    DB_PORT = db_url.port
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'HOST': DB_HOST,
            'PORT': DB_PORT,
        },
    }


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_FOR_IMAGEFIELD='media'
MEDIA_ROOT = os.path.join(BASE_DIR, f'{MEDIA_FOR_IMAGEFIELD}/')
STATIC_URL = '/static/'
MEDIA_URL = '/media/'



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'authapp.jwt.JWTAuth',
    ],

    # ex. ?limit=4&offset=2 like strapi:
    #'DEFAULT_PAGINATION_CLASS': "rest_framework.pagination.LimitOffsetPagination"

    # in order to se a limit we use PageNumerPagination:
    # ex. ?page=2 rif https://www.django-rest-framework.org/api-guide/pagination/
    'DEFAULT_PAGINATION_CLASS': "rest_framework.pagination.PageNumberPagination",
}